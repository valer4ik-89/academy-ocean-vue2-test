{
  "lessons": [
    {
      "id": 1,
      "title": "Урок 1. Що таке Vue?",
      "content": "<h2>Що таке Vue?</h2><p>Vue (вимовляється /vjuː/, як <strong>view</strong>) — це платформа JavaScript для створення інтерфейсів користувача. Він створений на основі стандартних HTML, CSS і JavaScript і забезпечує декларативну та компонентну модель програмування, яка допомагає вам ефективно розробляти інтерфейси користувача, прості чи складні.</p><h2>Прогресивна структура</h2> <p>Vue — це структура та екосистема, яка охоплює більшість загальних функцій, необхідних для розробки інтерфейсу. Але Інтернет надзвичайно різноманітний – речі, які ми створюємо в Інтернеті, можуть кардинально відрізнятися за формою та масштабом. Зважаючи на це, Vue розроблено таким чином, щоб бути гнучким і поступово адаптуватися. Залежно від вашого випадку використання Vue можна використовувати по-різному:</p><ul><li>Покращення статичного HTML без етапу створення</li><li>Вставлення як веб-компонентів на будь-яку сторінку</li><li>Односторінкова програма (SPA)</li><li>Fullstack/Візуалізація на стороні сервера (SSR)</li><li>Jamstack/Static Site Generation (SSG)</li><li>Націлювання на робочий стіл, мобільний, WebGL і навіть термінал</li></ul>"
    },
    {
      "id": 2,
      "title": "Урок 2. Однофайлові компоненти",
      "content": "<h2>Однофайлові компоненти</h2><p>У більшості проектів Vue із підтримкою інструментів збирання ми створюємо компоненти Vue за допомогою HTML-подібного формату файлу під назвою <strong>Однофайловий компонент</strong> (також відомий як файли <code>*.vue</code>, скорочено <strong>SFC</strong>). Vue SFC, як випливає з назви, інкапсулює логіку компонента (JavaScript), шаблон (HTML) і стилі (CSS) в одному файлі.</p><p>SFC є визначальною функцією Vue і рекомендованим способом створення компонентів Vue, <strong>якщо</strong> ваш варіант використання вимагає налаштування збірки. Ви можете дізнатися більше про як і навіщо використовувати SFC</a> у спеціальному розділі, але наразі знайте, що Vue обробляє всю збірку налаштування інструментів для вас.</p>"
    },
    {
      "id": 3,
      "title": "Урок 3. Стилі API",
      "content": "<h2>Стилі API</h2><p>Компоненти Vue можна створювати у двох різних стилях API: <strong>API параметрів</strong> і <strong>API композиції</strong>.</p><h3> API параметрів</h3><p>За допомогою API параметрів ми визначаємо логіку компонента за допомогою об’єкта параметрів, наприклад <code>data</code>, <code>methods</code> і <code>mounted</code>. Властивості, визначені параметрами, відображаються у внутрішніх функціях <code>this</code>, які вказують на екземпляр компонента:</p><h3>Composition API</h3><p>За допомогою Composition API ми визначаємо логіку компонента за допомогою імпортованих функцій API. У SFC Composition API зазвичай використовується з <code>&lt;script setup&gt;</code>. Атрибут <code>setup</code> — це підказка, яка змушує Vue виконувати перетворення під час компіляції, що дозволяє нам використовувати Composition API з меншою кількістю шаблонів. Наприклад, імпорт і змінні/функції верхнього рівня, оголошені в <code>&lt;script setup&gt;</code>, можна безпосередньо використовувати в шаблоні.</p>"
    }
  ]
}